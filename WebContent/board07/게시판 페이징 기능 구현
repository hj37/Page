게시판 페이징 기능 구현
- 어떤 게시판이든 목록의 글이 많아지면 한 페이지에 모든 글이
표시되는 것이 아니라  [1], [2], [3]....이렇게 페이지별로
표시 됩니다.

- 글목록에 페이징 기능이 어떻게 구현되는지 그원리 부터 살펴보자

게시판화면 그림

글번호	작성자		제목		작성일
 1		 hong		상품명	2020.06.11
 2		 hong		상품명	2020.06.11
 3		 hong		상품명	2020.06.11
 4		 hong			[답변]상품명	2020.06.11
 5		 hong		상품명	2020.06.11
 6		 hong		상품명	2020.06.11
 7		 hong		상품명	2020.06.11
 8		 hong		상품명	2020.06.11
 9		 hong		상품명	2020.06.11
 10		 hong			[답변]상품명	2020.06.11
 
	[1] [2] [3] [4] [5] [6] [7] [8] [9] [10]  next

설명 : 여기서 하단에 보이는 숫자[1]..~~는 페이지 번호 입니다.
한 페이지마다 10개의 글이 표시되고, 이페이지 10개가 모여 한 개의 섹션이 됩니다.
섹션 하나는 첫번째 페이지부터 열번째 페이지 까지입니다.

두번째 섹션은 열한 번째 페이지부터 스무번째 페이지 까지입니다.
따라서 사용자가 글 목록 페이지에서 [2]를 클릭하면 브라우저는 서버에 
section값으로는 1을 , pageNum 값으로는 2를 전송하는 것이죠!!!
그리고 글목록에는 두번째 페이지에 해당하는 글인 11에서 20번쨰 글을 테이블에서 조회한후
표시합니다.

- 페이징 기능을 추가한 글 목록 조회 SQL문입니다
	
	* section과  pageNum으로 글목록 조회하는 SQL문
		
		SELECT	* FROM (     --ROWNUM -> 계층형으로 조회된 레코드의 ROWNUM이 표시되도록 조회함
					    SELECT ROWNUM as recNum,
							  LVL,
							  articleNO,
							  parentNO,
							  title,
							  content,
							  id,
							  writedate
						 FROM (
						 		--계층형 SQL문으로 글을 계층별로 조회합니다.
						 		SELECT LEVEL as LVL,
						 			   articleNO,
						 			   parentNO,
						 			   totile,
						 			   content,
						 			   id,
						 			   writedate
						 		 FROM	t_board
						 		 START WITH	parentNO=0
						 		 CONNECT BY PRIOR  articelNO=parentNO
						 	  ) )
						where
					  --section과 pageNum값으로 조건식의 recNUm범위를 정한 후 
					  --조회된 글 중 해당하는 값이 있는 경우 최종적으로 조회합니다.
						recNum between(section-1)*100+(pageNum-1)*10+1 and (section-1)*100+parentNum*10;
					  --recNum between  1    and   10; <- section값이 1이고  pageNum값이 1인 경우입니다.
					  
설명 : 페이징 기능을 구현하기 위해 서브 쿼리문과 
	  오라클에서 제공하는 가상컬럼인 ROWNUM을 이용합니다.
	 ROWNUM은 select문으로 조회된 레코드 목록에 대해 오라클 자체에서 순서를 부여하여
	 레코드 번호를 순서대로 할당해 줍니다.
	 이서브쿼리문의 실행 순서는 다음과 같습니다.
	 1. 기존 계층형 구조로 글목록을 일단 조회합니다.
	 2. 그결과에 대해 다시  ROWNUm(recNum)이 표시되도록 
	       서브 쿼리문을 이용해 다시 한번 조회합니다.
	 3. ROWNum이 표시된 두번째 결과에서 section과 pageNum으로 계산된  where절의 
	    between연산자 사이의 값에 해당하는 RowNUM이 있는 레코드들만 최종적으로 조회함 









